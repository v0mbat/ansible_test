---

- name: Install WP-CLI
  get_url:
    url: "{{ wp_cli_phar_url }}"
    dest: "{{ wp_cli_bin_path }}"
    force: true
    owner: ubuntu
    group: ubuntu
    mode: 0755
  tags:
    - packages
  become: yes
    
- name: Install WP-CLI Pack
  command: "{{ wp_cli_bin_command }} package install {{ item }}"
  register: command_result
  changed_when: "'Installing package' in command_result.stdout"
  when: item is defined
  with_items:
    - "{{ wp_cli_packages }}"
  tags:
    -packages
  become: yes
  
- name: Download WP
  get_url:
    url=https://wordpress.org/latest.tar.gz
    dest=/tmp/wordpress.tar.gz
    validate_certs=no
  become: yes

- name: Extract WP
  unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no
  become: yes

- name: Upd Apache conf
  lineinfile: 
    dest: /etc/apache2/sites-enabled/000-default.conf
    regexp: "(.)+DocumentRoot /var/www/html"
    line: "DocumentRoot /var/www/wordpress"
  notify: 
    - restart apache2
  become: yes

    
- name: Config WP
  command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php
  become: yes

- name: Upd cfg WP
  lineinfile:
    dest: /var/www/wordpress/wp-config.php
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - {'regexp': "define\\('DB_HOST', '(.)+'\\);", 'line': "define('DB_HOST', '{{ db_serv }}:3306');"}
    - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{ wp_mysql_db }}');"}
    - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{ wp_mysql_user }}');"}
    - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{ wp_mysql_pass }}');"}
  become: yes

- name: Is WP Installed
  command: wp core is-installed
  args:
    chdir: "{{ wp_dir }}"
  register: wordpress_is_installed
  ignore_errors: True

- name: Install WP tables
  command: wp core install
    --url="{{ frontend }}"
    --title="{{ wp_site_title }}"
    --admin_user="{{ wp_admin_user }}"
    --admin_password="{{ wp_admin_pass }}"
    --admin_email="{{ wp_admin_email }}"
  args:
    chdir: "{{ wp_dir }}"
  when: wordpress_is_installed|failed

- name: Create users
  command: wp user create {{ item.name }} {{ item.email }} --user_pass="{{ item.password }}" --role="{{ item.role }}"
  args:
    chdir: "{{ wp_dir }}"
  with_items: "{{ wpusers }}"
  ignore_errors: True
  
 
    
  
  